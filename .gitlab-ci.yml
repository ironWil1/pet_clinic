stages:
  #  - sonar-check
  - build
  - restart
  - test
  - clean
  - rebuilding

#sonarqube-check:
#  stage: sonar-check
#  variables:
#    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
#    SONAR_TOKEN: "a10ad2fb341a5da90633dbb9c5bcfbff5f31f203"
#    SONAR_HOST_URL: "http://sonarqube:9000/"
#    SONAR_PROJECT_KEY: "pet_clinic"
#  script:
#    - mvn compile -P testprod sonar:sonar -e -Dsonar.projectKey=$SONAR_PROJECT_KEY -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_TOKEN
#  tags:
#    - docker_runner
#  allow_failure: false
#  rules:
#    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

build:
  image: maven:3.8-jdk-11-slim
  stage: build
  script:
    - 'mvn package -Dmaven.test.skip=true'
  artifacts:
    paths:
      - target/*.jar
    expire_in: 1 day
  cache:
    paths:
      - ./target
      - ./.m2
  tags:
    - clinic_shell
  rules:
    - changes:
        - documentation/**/*
        - .gitlab-ci.yml
      when: never
    - if: $CI_COMMIT_BRANCH == 'master'
      when: always

restart:
  image: docker:20.10.16
  stage: restart
  before_script:
    - docker-compose build petclinic
  script:
    - docker-compose up -d petclinic
  after_script:
    - docker image prune -f
  tags:
    - clinic_shell
  rules:
    - changes:
        - documentation/**/*
        - .gitlab-ci.yml
      when: never
    - if: $CI_COMMIT_BRANCH == 'master'
      when: manual

integration_test_job:
  services:
    - postgres:latest
  variables:
    POSTGRES_DB: pets_test
    POSTGRES_USER: jm
    POSTGRES_PASSWORD: psw
  stage: test
  script:
    - mvn test -Dspring.profiles.active=testprod
  tags:
    - docker_runner
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'master'

clean:
  stage: clean
  script:
    - docker image prune
  tags:
    - clinic_shell
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'
      when: manual

rebuilding:
  stage: rebuilding
  before_script:
    - docker-compose down -v
    - docker image prune -a -f
    - docker-compose build pets_db
    - docker-compose build petclinic
  script:
    - docker-compose up -d pets_db
    - docker-compose up -d petclinic
  after_script:
    - docker image prune -f
  tags:
    - clinic_shell
  rules:
    - changes:
        - documentation/**/*
        - .gitlab-ci.yml
      when: never
    - if: $CI_COMMIT_BRANCH == 'master'
      when: manual
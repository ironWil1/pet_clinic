stages:
  #  - sonar-check
  - build
  - restart
  - test
  - rebuilding
  - trigger

.detect-change:
  stage: trigger
  image: everpeace/curl-jq
  before_script:
    - 'export SOURCE=$(cat $TRIGGER_PAYLOAD | jq -r .object_attributes.source_branch)'
    - 'export PREVIOUS=$(cat $TRIGGER_PAYLOAD | jq -r .changes.title.previous)'
    - 'export CURRENT=$(cat $TRIGGER_PAYLOAD | jq -r .changes.title.current)'
    - 'export IID=$(cat $TRIGGER_PAYLOAD | jq -r .object_attributes.iid)'
    - echo $SOURCE
    - echo $PREVIOUS
    - echo $CURRENT
  tags:
    - docker_runner
  only:
    - triggers



# title-change:
#   extends: .detect-change
#   script:
#   - 'if [ "$PREVIOUS" != "$CURRENT" ]; then curl --request POST --form "token=${PROJECT_TOKEN}" --form "ref=${SOURCE}" "https://gitlab.com/api/v4/projects/${CI_PROJECT_ID}/trigger/pipeline" | jq -r .web_url; fi'

draft-job:
  extends: .detect-change
  script:
    - 'if [[ $PREVIOUS = Draft:* ]]; then echo "Pass. Previous title is draft"; else echo "Fail. Previous was not in Draft."; exit 0; fi'
    - 'if [[ $CURRENT = Draft:* ]];  then echo "Fail. Current is in draft."; exit 0; else echo "Pass. Current title is not in draft."; fi'
    - 'curl --request POST --header "PRIVATE-TOKEN: ${mergeFromDraftToReady}" "https://gitlab.com/api/v4/projects/${CI_PROJECT_ID}/merge_requests/{$IID}/pipelines" | jq -r .web_url;'




#sonarqube-check:
#  stage: sonar-check
#  variables:
#    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
#    SONAR_TOKEN: "a10ad2fb341a5da90633dbb9c5bcfbff5f31f203"
#    SONAR_HOST_URL: "http://sonarqube:9000/"
#    SONAR_PROJECT_KEY: "pet_clinic"
#  script:
#    - mvn compile -P testprod sonar:sonar -e -Dsonar.projectKey=$SONAR_PROJECT_KEY -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_TOKEN
#  tags:
#    - docker_runner
#  allow_failure: false
#  rules:
#    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

build:
  image: maven:3.8-jdk-11-slim
  stage: build
  variables:
    MAVEN_OPTS: -Dmaven.test.skip=true -Dmaven.repo.local=.m2/repository
  script:
    - mvn -q clean package
  artifacts:
    name: petclinic
    paths:
      - web/target/*.jar
    expire_in: 1 day
  cache:
    paths:
      - .m2/repository
  tags:
    - docker_runner
  rules:
    - changes:
        - documentation/**/*
        - README.md
      when: never
    - if: $CI_COMMIT_BRANCH == 'master'
      when: always


restart:
  stage: restart
  script:
    - docker-compose rm -f -s -v petclinic
    - docker image rm petclinic_image || true
    - docker-compose up -d --no-deps petclinic
  tags:
    - clinic_shell
  rules:
    - changes:
        - documentation/**/*
        - README.md
      when: never
    - if: $CI_COMMIT_BRANCH == 'master'
      when: on_success

integration_test_job:
  services:
    - postgres:latest
  variables:
    POSTGRES_DB: pets_test
    POSTGRES_USER: jm
    POSTGRES_PASSWORD: psw
  stage: test
  script:
    - mvn test -Dspring.profiles.active=testprod
  tags:
    - docker_runner
  rules:
    - if: $CI_MERGE_REQUEST_TITLE =~ /Draft:/
      when: never
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'master'


rebuilding:
  stage: rebuilding
  needs:
    - build
  dependencies:
    - build
  script:
    - docker-compose down -v --rmi all
    - docker-compose up -d
  tags:
    - clinic_shell
  rules:
    - changes:
        - documentation/**/*
        - README.md
      when: never
    - if: $CI_COMMIT_BRANCH == 'master'
      when: manual
job:
  image: everpeace/curl-jq
  script:
    - 'export SOURCE=$(cat $TRIGGER_PAYLOAD | jq -r .object_attributes.source_branch)'
    - 'export PREVIOUS=$(cat $TRIGGER_PAYLOAD | jq -r .changes.title.previous)'
    - 'export CURRENT=$(cat $TRIGGER_PAYLOAD | jq -r .changes.title.current)'
    - 'if [ "$PREVIOUS" != "$CURRENT" ]; then curl --request POST --form "token=$mergeFromDraftToReady" --form "ref=${SOURCE}" "https://gitlab.com/api/v4/projects/${CI_PROJECT_ID}/trigger/pipeline"; fi'
    - echo $SOURCE
    - echo $PREVIOUS
    - echo $CURRENT
  only:
    - triggers


dast:
  script:
    - echo "DAST!"
  except:
    - triggers

